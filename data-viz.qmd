---
title: "Intro to Data Viz"
format: html
editor: visual
---

```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(janitor)
library(scales)
library(DT)
library(tidyr)
library(leaflet)
```

## Read Data

```{r}
escape_raw <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/urn%3Auuid%3Af119a05b-bbe7-4aea-93c6-85434dcb1c5e")
```

Exploring Data

```{r}
#| eval: false  #supress analysis
colnames(escape_raw)
glimpse(escape_raw)
range(escape_raw$sampleDate)
unique(escape_raw$Species)
```

## Cleaning Data

Cleaning Column Names

```{r}
escape <- escape_raw %>%
  clean_names()

colnames(escape)
```

Calculate the Annual escape by species and sasap regions

```{r}
annual_esc <- escape %>%
    separate(sample_date, c("year", "month", "day"), sep = "-") %>%
    mutate(year = as.numeric(year)) %>%
    group_by(species, sasap_region, year) %>%
    summarize(escapement = sum(daily_count)) %>%
    filter(species %in% c("Chinook", "Sockeye", "Chum", "Coho", "Pink"))

head(annual_esc)

unique(annual_esc$species)
#The unique() function displays all the unique values within the vector. In this case, we're trying to view all the unique species
```

```{r}
## Option 1 - data and mapping called in the ggplot() function
ggplot(data = annual_esc,
       aes(x = species, y = escapement)) +
    geom_col()

## Option 2 - data called in ggplot function; mapping called in geom
ggplot(data = annual_esc) +
    geom_col(aes(x = species, y = escapement))


## Option 3 - data and mapping called in geom
ggplot() +
    geom_col(data = annual_esc,
             aes(x = species, y = escapement))
```

Making bars blue

```{r}
ggplot(annual_esc, aes(x=species, y= escapement))+ 
  geom_col(fill="blue")
```

```{r}
ggplot(annual_esc,
       aes(x = species, y = escapement,
           fill = sasap_region)) +
    geom_col()
```

##Create Multiple Plots subsetting data

```{r}
## Subset with data from years 2000 to 2016

annual_esc_2000s <- annual_esc %>%
    filter(year %in% c(2000:2016))

## Quick check
unique(annual_esc_2000s$year) 
```

plotting

```{r}
## Plot with facets
ggplot(annual_esc_2000s,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap( ~ sasap_region,
                scales = "free_y")

```

customizing plot

```{r}
ggplot(annual_esc_2000s,
       aes(x = year,
           y = escapement,
           color = species)) +
    geom_line() +
    geom_point() +
    facet_wrap(~ sasap_region,
                scales = "free_y")+
labs(title= "Annual Salmon Escapement by Region", y = "Escapement")+
  theme_bw()+
  theme(legend.position = "bottom", legend.title = element_blank(),
axis.text.x = element_text(angle= 45, vjust= 0.5))+
  scale_y_continuous(labels=comma)
```

```{r}
ggsave("plots/annual_salmon_esc_region.jpg",width= 8, height= 6, units = "in" )
```

# Interactive visualization

Subset Data

```{r}
locations <- escape %>%
    distinct(location, latitude, longitude) %>%
    drop_na()
datatable(locations)
```

```{r}
leaflet(locations) %>%
    addTiles() %>%
    addMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ location
    )
```

```{r}
leaflet(locations) %>%
    addWMSTiles(
        "https://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv?request=getmap&service=wms&BBOX=-90,-180,90,360&crs=EPSG:4326&format=image/jpeg&layers=gebco_latest&width=1200&height=600&version=1.3.0",
        layers = 'GEBCO_LATEST',
        attribution = "Imagery reproduced from the GEBCO_2022 Grid, WMS 1.3.0 GetMap, www.gebco.net"
    ) %>%
    addCircleMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ location,
        radius = 5,
        # set fill properties
        fillColor = "salmon",
        fillOpacity = 1,
        # set stroke properties
        stroke = T,
        weight = 0.5,
        color = "white",
        opacity = 1
    )
```
